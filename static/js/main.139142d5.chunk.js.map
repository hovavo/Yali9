{"version":3,"sources":["components/Star.js","components/Shape.js","utils/getDistacne.js","components/Scene.js","components/OrientationMonitor.js","components/CanvasSizeMonitor.js","components/shapes/Shape01.js","components/shapes/index.js","components/App.js","index.js"],"names":["Star","props","depth","parallax","isZero","x","Math","round","y","style","opacity","concat","transform","react_default","a","createElement","className","Shape","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","svgRef","React","createRef","points","Array","from","current","children","filter","node","getTotalLength","map","path","len","numPoints","floor","point","j","getPointAtLength","flat","onDataReady","distance","shape","ref","Component","getDistance","pointA","pointB","xDiff","yDiff","sqrt","Scene","getRandomScreenPoint","range","arguments","length","undefined","rangePx","size","width","height","rangeMod","random","onShapeDataReady","shapeStars","i","toFixed","setState","state","bgStars","getBGStars","parallaxOffset","localParallax","NaN","fromCenter","_this2","item","objectSpread","_this3","star","components_Star","assign","key","components_Shape","p","sensitivity","wasZero","abs","OrientationMonitor","onMove","velocityX","velocityY","Parallax","refs","root","frictionX","frictionY","window","addEventListener","removeEventListener","data-depth","CanvasSizeMonitor","callback","onResize","innerWidth","innerHeight","center","SvgShape01","_ref","objectWithoutProperties","id","viewBox","xmlSpace","d","shapes","forwardRef","Shape01_SvgShape01","App","onParallax","canvasSize","start","stop","components_OrientationMonitor","components_Scene","rootElement","document","getElementById","ReactDOM","render","components_App"],"mappings":"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","file":"static/js/main.139142d5.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Star = props => {\n  const { depth, parallax, isZero } = props;\n  const x = isZero ? props.x : Math.round(parallax.x / depth + props.x);\n  const y = isZero ? props.y : Math.round(parallax.y / depth + props.y);\n  const style = {\n    opacity: `${1 - depth * 0.4}`,\n    transform: `translate3d(${ x }px, ${ y }px, 0px)`\n  };\n  return <div className=\"layer star\" style={style} />;\n};\n\nexport default Star;\n","import React from \"react\";\n\nclass Shape extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.svgRef = React.createRef();\n  }\n\n  componentDidMount() {\n    const interval = 20 // TODO: prop\n    const paths = Array.from(this.svgRef.current.children).filter(node=> {\n      return node.getTotalLength;\n    });\n\n    const points = paths.map(path => {\n      const len = path.getTotalLength();\n      const numPoints = Math.floor(len / interval);\n      if (numPoints < 1) {\n        return []\n      }\n      return Array.from(Array(numPoints)).map((point, j) => {\n        return path.getPointAtLength((len / numPoints) * j);\n      })\n    }).flat();\n\n    if (this.props.onDataReady) {\n      this.props.onDataReady(points);\n    }\n  }\n\n  render() {\n    const style = {\n      opacity: this.props.isZero ? \"initial\" : (0.3 - (this.props.distance / 100))\n      // filter: this.props.isZero ? \n      //   `initial` : \n      //   `blur(${ this.props.blur + 1 }px)`\n    }\n    \n    return <this.props.shape \n      ref={this.svgRef}\n      className={this.props.className}\n      style={style} />\n  }\n}\nexport default Shape;\n","const getDistance = (pointA, pointB) => {\n  const xDiff = pointA.x - pointB.x;\n  const yDiff = pointA.y - pointB.y;\n  return Math.sqrt(xDiff * xDiff + yDiff * yDiff);\n};\n\nexport default getDistance;","import React from \"react\";\nimport Star from \"./Star\";\nimport Shape from \"./Shape\";\nimport getDistance from \"../utils/getDistacne\"\n\nclass Scene extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      bgStars: this.getBGStars(),\n      shapeStars: [],\n      parallaxOffset: {\n        x: Math.random() * 10,\n        y: Math.random() * 20\n      },\n      localParallax: {\n        x: NaN,\n        y: NaN,\n        fromCenter: NaN,\n        isZero: false\n      }\n    }\n  }\n\n  getRandomScreenPoint = (range = 1) => {\n    const rangePx = {\n      x: this.props.size.width * range,\n      y: this.props.size.height * range\n    };\n    const rangeMod = {\n      x: this.props.size.width * ((1 - range) / 2),\n      y: this.props.size.height * ((1 - range) / 2)\n    };\n    return {\n      x: Math.round(Math.random() * rangePx.x) + rangeMod.x,\n      y: Math.round(Math.random() * rangePx.y) + rangeMod.y\n    };\n  }\n\n  getBGStars () {\n    const bg = Array.from(Array(80)).map((item, i) => {\n      return {\n        i: i,\n        depth: (Math.random() + 0.6).toFixed(3),\n        ...this.getRandomScreenPoint(1.5)\n      };\n    });\n    return bg;\n  }\n\n  onShapeDataReady = points => {\n    const shapeStars = points.map((point, i) => {\n      return {\n        i: i,\n        x: point.x,\n        y: point.y,\n        depth: (1 - Math.random() * 0.5).toFixed(3)\n      }\n    })\n    this.setState({shapeStars});\n  } \n\n  static getDerivedStateFromProps(props, state) {\n\n    const getIsParallaxZero = (p, l) => {\n      const sensitivity = l ? 20 : 2;\n      const isZero = Math.abs(p.x) < sensitivity && Math.abs(p.y) < sensitivity;\n      return isZero;\n    }\n\n    const localParallax = {\n      x: props.parallax.x + state.parallaxOffset.x,\n      y: props.parallax.y + state.parallaxOffset.y\n    };\n\n    const fromCenter = getDistance(localParallax, {x: 0, y: 0});\n    \n    const wasZero = state.localParallax.isZero;\n    const isZero = getIsParallaxZero(localParallax, wasZero);\n\n    return {\n      localParallax: {\n        ...localParallax,\n        fromCenter,\n        isZero      \n      }\n    };\n  }\n      \n  render() {\n    return (\n      <div className=\"scene\">\n        {this.state.bgStars.map(star => (\n          <Star {...star} \n            parallax={this.state.localParallax} \n            key={star.i} />\n        ))}\n        <div className=\"shape-container\">\n          <Shape shape={this.props.shape} \n            onDataReady={this.onShapeDataReady}\n            isZero={this.state.localParallax.isZero}\n            distance={this.state.localParallax.fromCenter}\n            className={this.state.localParallax.isZero ? \"\" : \"hidden\"} />\n          {this.state.shapeStars.map(star => (\n            <Star {...star} \n              parallax={this.state.localParallax} \n              isZero={this.state.localParallax.isZero}\n              key={star.i} />\n          ))}\n        </div>\n    </div>)\n  }\n};\n\nexport default Scene;\n","import React from \"react\";\nimport Parallax from \"parallax-js\";\n\nclass OrientationMonitor extends React.Component {\n\n  componentDidMount() {\n    this.parallax = new Parallax(this.refs.root, {\n      frictionX: 0.2,\n      frictionY: 0.2\n    });\n    window.addEventListener(\"mousemove\", this.onMove, true);\n    window.addEventListener(\"devicemotion\", this.onMove, true);\n    window.addEventListener(\"deviceorientation\", this.onMove, true);\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"mousemove\", this.onMove);\n    window.removeEventListener(\"devicemotion\", this.onMove);\n    window.removeEventListener(\"deviceorientation\", this.onMove);\n  }\n\n  onMove = () => {\n    const x = this.parallax.velocityX.toFixed(2) * -1;\n    const y = this.parallax.velocityY.toFixed(2) * -1;\n    if (this.props.onMove) {\n      this.props.onMove({ x, y });\n    }\n  };\n\n  render() {\n    return (\n      <div className=\"mon\" ref=\"root\">\n        <div ref=\"el\" data-depth=\"1\" />\n      </div>\n    );\n  }\n}\n\nexport default OrientationMonitor;\n","class CanvasSizeMonitor {\n  static start(window, callback) {\n    CanvasSizeMonitor.window = window;\n    CanvasSizeMonitor.callback = callback || (() => {});\n    CanvasSizeMonitor.window.addEventListener(\n      \"resize\",\n      CanvasSizeMonitor.onResize,\n      true\n    );\n  }\n  static stop() {\n    CanvasSizeMonitor.window.removeEventListener(\n      \"resize\",\n      CanvasSizeMonitor.onResize\n    );\n  }\n  static onResize = () => {\n    const width = window.innerWidth;\n    const height = window.innerHeight;\n    const center = {x: width / 2, y: height / 2};\n    CanvasSizeMonitor.callback({ width, height, center });\n  };\n}\n\nexport default CanvasSizeMonitor;\n","import React from \"react\";\n\nconst SvgShape01 = ({ svgRef, ...props }) => (\n  <svg\n    id=\"Shape01_svg__Layer_1\"\n    x={0}\n    y={0}\n    viewBox=\"0 0 310 470\"\n    xmlSpace=\"preserve\"\n    ref={svgRef}\n    {...props}\n  >\n    <style>\n      {\n        \".Shape01_svg__st0,.Shape01_svg__st1{fill:none;stroke:#afafaf;stroke-miterlimit:10}.Shape01_svg__st1{stroke-linecap:square}\"\n      }\n    </style>\n    <path\n      className=\"Shape01_svg__st0\"\n      d=\"M128.5 277.1l82.8-116.8M159.3 187.1h-8.6c-34.7 0-62.9-28.1-62.9-62.9V121c0-34.7 28.1-62.9 62.9-62.9h8.6c34.7 0 62.9 28.1 62.9 62.9v3.2c-.1 34.8-28.2 62.9-62.9 62.9z\"\n    />\n    <path\n      className=\"Shape01_svg__st1\"\n      d=\"M65.9 392.8V382h-5.4M139.8 419.4V382h-5.5M258.2 419.4V382h-5.5M11.5 392.8V382H6M24.6 370.8V382h23v23c0 8-6.4 14.4-14.4 14.4M216.3 370.8V382h23v23c0 8-6.4 14.4-14.4 14.4M99.6 382h12.9c3.6 0 6.5 2.9 6.5 6.5v30.9H97.1h27.7M157.8 382v37.4h7.3c10.5 0 19-8.5 19-19v-14c0-2.4-2-4.4-4.4-4.4H174M263.7 382h-5.5M278.2 419.4v-19.6c0-9.8 8-17.8 17.8-17.8h8v37.4h-11.7\"\n    />\n    <path\n      className=\"Shape01_svg__st1\"\n      d=\"M278.2 382v1.2c0 2.6 2.1 4.6 4.6 4.6\"\n    />\n  </svg>\n);\n\nconst ForwardRef = React.forwardRef((props, ref) => (\n  <SvgShape01 svgRef={ref} {...props} />\n));\nexport default ForwardRef;\n","import Shape01 from \"./Shape01\"\n\nexport default [Shape01]","import React from \"react\";\nimport Scene from \"./Scene\";\nimport OrientationMonitor from \"./OrientationMonitor\";\nimport CanvasSizeMonitor from \"./CanvasSizeMonitor\";\nimport shapes from \"./shapes\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      parallax: {\n        x: 0,\n        y: 0\n      },\n      canvasSize: {\n        width: window.innerWidth,\n        height: window.innerHeight, \n        center: {x: window.innerWidth / 2, y: window.innerHeight / 2}\n      }\n    }\n  }\n\n  onParallax = parallax => {\n    this.setState({\n      parallax\n    })\n  }\n\n  onResize = size => {\n    this.setState({canvasSize: size})\n  }\n\n  componentDidMount() {\n    CanvasSizeMonitor.start(window, this.onResize);\n  }\n\n  componentWillUnmount() {\n    CanvasSizeMonitor.stop();\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <OrientationMonitor onMove={this.onParallax} />\n        <Scene size={this.state.canvasSize} parallax={this.state.parallax} shape={shapes[0]} />\n      </div>\n    )\n  }\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\"\nimport \"./styles.css\";\n\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"],"sourceRoot":""}